import { table, primaryKey } from '../luna';
import { Model, FindOptions } from '../db';

export class Entity {}

<% if (tableComment) { %>
// <%= tableComment %><% } %>
@table('<%= tableName %>')
export class <%= modelName %> extends Model {
    <% for(const column of columns) { %>
    <% if (column.isPK) { %>@primaryKey<% } %>
    <%= column.name %>?: <%= column.type %> = undefined;<% } %>

    static async findOne(id: number | string): Promise<<%= modelName %> | undefined>;
    static async findOne(options: FindOptions): Promise<<%= modelName %> | undefined>;
    static async findOne(p1: any) {
        return Model._findOne(<%= modelName %>, p1);
    }
    static async findAll(idArr: Array<number | string>): Promise<<%= modelName %>[]>;
    static async findAll(options: FindOptions): Promise<<%= modelName %>[]>;
    static async findAll(p1: any) {
        return Model._findAll(<%= modelName %>, p1);
    }
    static async fetch(sql: string, params?: any[]): Promise<<%= modelName %> | undefined> {
        return Model._fetch(<%= modelName %>, sql, params);
    }
    static async fetchAll(sql: string, params?: any[]): Promise<<%= modelName %>[]> {
        return Model._fetchAll(<%= modelName %>, sql, params);
    }
    static async insert(info: <%= modelName %>): Promise<<%= modelName %>> {
        return Model._insert(info);
    }
    static async update(id: number | string, info: <%= modelName %>): Promise<number>;
    static async update(options: FindOptions, info: <%= modelName %>): Promise<number>;
    static async update(p1: any, info: <%= modelName %>): Promise<number> {
        return Model._update(p1, info);
    }
    static async delete(id: number | string, info: <%= modelName %>): Promise<number>;
    static async delete(options: FindOptions, info: <%= modelName %>): Promise<number>;
    static async delete(p1: any, info: <%= modelName %>): Promise<number> {
        return Model._delete(p1, info);
    }
    static async exec(sql: string, params?: any[]): Promise<number> {
        return Model._exec(sql, params);
    }
}